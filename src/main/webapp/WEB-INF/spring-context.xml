<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:beans="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- Enable annotation-based Spring MVC controllers (eg: @Controller annotation) -->
    <mvc:annotation-driven/>

    <!-- Classpath scanning of @Component, @Service, etc annotated class -->
    <context:component-scan base-package="com.movietime" />

    <import resource="spring-context-security.xml" />

    <!-- mapping for resource folder -->
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <!-- mapping for static html files -->
    <mvc:resources mapping="/static/**" location="/static/" />

    <!-- MySQL Datasource with Commons DBCP connection pooling -->
    <beans:bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <beans:property name="url" value="jdbc:mysql://localhost:3306/movietime2"/>
        <!-- <beans:property name="url" value="jdbc:mysql://localhost:3306/hello"/> -->
        <beans:property name="username" value="root"/>
        <beans:property name="password" value="root"/>
    </beans:bean>

    <!-- EntityManagerFactory -->
    <beans:bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="entityManagerFactory">
        <beans:property name="persistenceUnitName" value="MovieTimePU"/>
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <!-- Transaction Manager -->
    <beans:bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager">
        <beans:property name="entityManagerFactory" ref="entityManagerFactory"/>
    </beans:bean>

    <!-- Enable @Transactional annotation -->
    <tx:annotation-driven/>

    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </beans:bean>

    <!-- Configure to plugin JSON as request and response in method handler -->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

</beans>
